"
" Colors
"
colorscheme Tomorrow-Night-Eighties
syntax enable       " enable syntax processing

"
" Leader
"
let mapleader=","       " leader is comma

"
" Plugin
"
call plug#begin('~/.vim/plugged')
Plug 'editorconfig/editorconfig-vim'
Plug 'kien/ctrlp.vim'
Plug 'scrooloose/syntastic'
Plug 'terryma/vim-multiple-cursors'
Plug 'mattn/emmet-vim'
Plug 'sheerun/vim-polyglot'
Plug 'bling/vim-airline'
call plug#end()

" 
" History
"
if &history < 1000
set history=1000
endif



"
" tabs & spaces
"
set tabstop=2       " number of visual spaces per TAB
set softtabstop=2   " number of spaces in tab when editing
set expandtab       " tabs are spaces
set shiftwidth=2

"
" UI Config
"
set number              " show line numbers
set showcmd             " show command in bottom bar
set cursorline          " highlight current line
filetype indent on      " load filetype-specific indent files
set wildmenu            " visual autocomplete for command menu
set lazyredraw          " redraw only when we need to.
set showmatch           " highlight matching [{()}]
set list
set autoindent
set autoread
set copyindent
nnoremap <F2> :set invpaste paste?<CR> 
set pastetoggle=<F2>
set showmode

set noerrorbells
set visualbell
set title

"
" Searching
"
set incsearch           " search as characters are entered
set hlsearch            " highlight matches
set ignorecase          " Ignore case while searching
set smartcase           " except if it is an uppercase search
set gdefault            " Apply global substitutions
set magic               " Set magic o, for regexp
set linespace=3
set scrolloff=3

"
" Buffer
"
nnoremap <leader>q :bp\|bd #<CR>
nnoremap <space>l :bnext<CR>
nnoremap <space>h :bprevious<CR>

"
" Folding code
"
" set foldenable          " enable folding
" set foldlevelstart=10   " open most folds by default
" set foldnestmax=10      " 10 nested fold max
" space open/closes folds
" nnoremap <space> za
" set foldmet"


"
" Movements
"
" move vertically by visual line
nnoremap j gj
nnoremap k gk
" highlight last inserted text
nnoremap gV `[v`]


" jk is escape
inoremap jk <esc>
nnoremap <leader>s :mksession<CR>
nnoremap <leader><space> :nohlsearch<CR>

"
" Indent
"
nnoremap <Tab> >>_
nnoremap <S-Tab> <<_
inoremap <S-Tab> <C-D>
vnoremap <Tab> >gv
vnoremap <S-Tab> <gv


"
"Backup
"
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup


"
" Status line
"
set laststatus=2                             " Always show status line.
set showmode                                 " Display the current mode
set statusline=%-3.3n\                       " buffer number
set statusline+=%f                           " Path.
set statusline+=%m                           " Modified flag.
set statusline+=%r                           " Readonly flag.
set statusline+=%w                           " Preview window flag.
set statusline+=\                            " Space.
set statusline+=%#warningmsg#                " Highlight the following as a warning.
" set statusline+=%{SyntasticStatuslineFlag()} " Syntastic errors.
set statusline+=%*                           " Reset highlighting.
set statusline+=%=                           " Right align.

" File format, encoding and type.  Ex: "(unix/utf-8/python)"
set statusline+=(
set statusline+=%{&ff}                        " Format (unix/DOS).
set statusline+=/
set statusline+=%{strlen(&fenc)?&fenc:&enc}   " Encoding (utf-8).
set statusline+=/
set statusline+=%{&ft}                        " Type (python).
set statusline+=)

set guifont=Meslo\ LG\ S\ Regular\ for\ Powerline:h12 " Use the Powerline specific font

" " Line and column position and counts.
set statusline+=\ (line\ %l\/%L\/%P,\ col\ %03c)

